---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import FiltroTipoVehiculo from '../components/FiltroTipoVehiculo';
import { client } from '../utils/sanityClient';
import type { Transmision } from '../types/sanity';

const query = `*[_type == "transmision"]{_id, marca, modelo, precio, condicion, foto, slug, ano}`;
const transmisiones: Transmision[] = await client.fetch(query);
---

<Layout
  title="Cat√°logo - Transmisiones Autom√°ticas SV"
  description="Encuentra transmisiones autom√°ticas nuevas, usadas y reconstruidas para todas las marcas de veh√≠culos en El Salvador. Garant√≠a de hasta 12 meses."
>

    <!-- Hero Premium Automotive -->
    <section class="hero-automotive">
        <div class="hero-background">
            <div class="automotive-elements">
                <div class="circuit circuit-1"></div>
                <div class="circuit circuit-2"></div>
                <div class="circuit circuit-3"></div>
            </div>
            <div class="particle-system"></div>
        </div>
        
        <div class="hero-content glass">
            <h1 class="hero-title animate-in">
                <span class="title-main">Transmisiones</span>
                <span class="title-accent">Autom√°ticas SV</span>
            </h1>
            <p class="hero-subtitle animate-in">
                Tecnolog√≠a de precisi√≥n y confiabilidad garantizada.
                <br>Especialistas en transmisiones autom√°ticas de √∫ltima generaci√≥n.
            </p>
            
            <div class="hero-metrics animate-in">
                <div class="metric-card glass-strong hover-lift">
                    <span class="metric-number" data-target="15">0</span>
                    <span class="metric-label">A√±os de Experiencia</span>
                    <div class="metric-glow"></div>
                </div>
                <div class="metric-card glass-strong hover-lift">
                    <span class="metric-number" data-target="1500">0</span>
                    <span class="metric-label">Transmisiones Reparadas</span>
                    <div class="metric-glow"></div>
                </div>
                <div class="metric-card glass-strong hover-lift">
                    <span class="metric-number">12</span>
                    <span class="metric-label">Meses de Garant√≠a</span>
                    <div class="metric-glow"></div>
                </div>
            </div>

            <div class="hero-actions animate-in">
                <a href="#catalogo" class="btn primary-glow">
                    <span>Explorar Cat√°logo</span>
                    <span class="btn-arrow">‚Üì</span>
                </a>
                <a href="/contacto" class="btn outline secondary">
                    <span>Solicitar Cotizaci√≥n</span>
                </a>
            </div>
        </div>
    </section>

    <!-- Filtros Premium -->
    <section class="filters-section glass animate-in" id="catalogo">
        <div class="container">
            <div class="section-header">
                <h2 class="section-title">Nuestro Cat√°logo</h2>
                <p class="section-subtitle">Encuentra la transmisi√≥n perfecta para tu veh√≠culo</p>
            </div>
            <FiltroTipoVehiculo 
                client:load 
                transmisiones={transmisiones} 
                onFilterChange={(filtered) => {
                    const grid = document.querySelector('.catalogo-grid');
                    const noResults = document.getElementById('no-results');
                    
                    if (!grid || !noResults) return;

                    const allCards = Array.from(grid.children) as HTMLElement[];
                    let visibleCount = 0;

                    allCards.forEach((card, index) => {
                        const id = card.dataset.id;
                        const shouldShow = filtered.some(t => t._id === id);
                        
                        if (shouldShow) {
                            card.style.display = 'block';
                            card.style.animation = `cardSlideIn var(--motion-medium) var(--ease-elastic) ${index * 0.1}s both`;
                            visibleCount++;
                        } else {
                            card.style.display = 'none';
                        }
                    });

                    noResults.style.display = visibleCount === 0 ? 'flex' : 'none';
                }}
            />
        </div>
    </section>

    <!-- Cat√°logo con Grid Animado -->
    <section class="catalogo-section">
        <div class="container">
            <div class="section-header animate-on-scroll">
                <h2>Nuestro Cat√°logo</h2>
                <p>Encuentra la transmisi√≥n perfecta para tu veh√≠culo</p>
            </div>
            
            <div class="catalogo-grid" id="catalogo-grid">
                {transmisiones.map((transmision, index) => (
                    <div 
                        data-id={transmision._id} 
                        class="card-wrapper animate-on-scroll"
                        style={`animation-delay: ${index * 0.1}s`}
                    >
                        <Card transmision={transmision} />
                    </div>
                ))}
            </div>

            <div id="no-results" class="no-results">
                <div class="no-results-icon">üîç</div>
                <h3>No encontramos transmisiones con esos filtros</h3>
                <p>Intenta ajustar tus criterios o contacta a nuestros expertos</p>
                <a href="/contacto" class="btn">Solicitar Ayuda</a>
            </div>
        </div>
    </section>

</Layout>

<style>
    /* ===== HERO PREMIUM AUTOMOTIVE ===== */
    .hero-automotive {
        position: relative;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        overflow: hidden;
        background: linear-gradient(135deg, 
            var(--bg-900) 0%, 
            var(--bg-800) 40%, 
            var(--bg-700) 100%);
        padding: var(--spacing-3xl) 0;
    }

    .hero-background {
        position: absolute;
        inset: 0;
        z-index: 1;
        opacity: 0.8;
    }

    .automotive-elements {
        position: relative;
        width: 100%;
        height: 100%;
        opacity: 0.7;
    }

    .circuit {
        position: absolute;
        background: linear-gradient(45deg, 
            transparent, 
            var(--primary), 
            var(--secondary), 
            transparent);
        border-radius: var(--radius-xs);
        animation: circuitPulse 6s ease-in-out infinite;
        box-shadow: var(--glow-primary);
    }

    .circuit-1 {
        top: 20%;
        left: 10%;
        width: 300px;
        height: 3px;
        animation-delay: 0s;
    }

    .circuit-2 {
        top: 60%;
        right: 15%;
        width: 250px;
        height: 3px;
        animation-delay: 2s;
    }

    .circuit-3 {
        bottom: 30%;
        left: 50%;
        width: 200px;
        height: 3px;
        animation-delay: 4s;
    }

    @keyframes circuitPulse {
        0%, 100% {
            opacity: 0.3;
            transform: scaleX(1) translateX(0);
            filter: brightness(1);
        }
        25% {
            opacity: 0.8;
            transform: scaleX(1.2) translateX(10px);
            filter: brightness(1.3);
        }
        50% {
            opacity: 1;
            transform: scaleX(1.5) translateX(20px);
            filter: brightness(1.5);
        }
        75% {
            opacity: 0.6;
            transform: scaleX(1.1) translateX(5px);
            filter: brightness(1.1);
        }
    }

    .particle-system {
        position: absolute;
        inset: 0;
        background: 
            radial-gradient(circle at 20% 30%, rgba(255,107,26,0.12) 0%, transparent 50%),
            radial-gradient(circle at 80% 70%, rgba(0,212,255,0.08) 0%, transparent 50%),
            radial-gradient(circle at 50% 10%, rgba(255,215,0,0.06) 0%, transparent 40%);
        animation: particleFloat 25s ease-in-out infinite;
    }

    @keyframes particleFloat {
        0%, 100% { 
            transform: translateY(0) rotate(0deg) scale(1);
            opacity: 0.8;
        }
        33% { 
            transform: translateY(-30px) rotate(2deg) scale(1.1);
            opacity: 1;
        }
        66% { 
            transform: translateY(-15px) rotate(-1deg) scale(0.9);
            opacity: 0.9;
        }
    }

    .hero-content {
        position: relative;
        z-index: 2;
        max-width: 1000px;
        margin: 0 auto;
        padding: var(--spacing-3xl);
        background: linear-gradient(135deg, 
            var(--glass-strong) 0%, 
            var(--glass-medium) 100%);
        backdrop-filter: blur(24px) saturate(1.4);
        -webkit-backdrop-filter: blur(24px) saturate(1.4);
        border-radius: var(--radius-2xl);
        border: 1px solid var(--glass-border);
        box-shadow: var(--shadow-2xl), var(--glow-primary);
    }

    .hero-title {
        margin-bottom: var(--spacing-xl);
        animation: titleSlideIn 1.2s var(--ease-out) both;
    }

    @keyframes titleSlideIn {
        from {
            opacity: 0;
            transform: translateY(50px) scale(0.9);
        }
        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }

    .title-main {
        display: block;
        font-size: clamp(2.5rem, 6vw, 4rem);
        font-weight: 300;
        color: var(--text-secondary);
        margin-bottom: var(--spacing-sm);
        font-family: 'Orbitron', sans-serif;
        letter-spacing: -0.02em;
    }

    .title-accent {
        display: block;
        font-size: clamp(3rem, 8vw, 5.5rem);
        font-weight: 800;
        background: var(--gradient-primary);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        font-family: 'Orbitron', sans-serif;
        text-shadow: var(--glow-primary);
        letter-spacing: -0.03em;
        animation: textGlow 3s ease-in-out infinite;
    }

    @keyframes textGlow {
        0%, 100% { 
            text-shadow: var(--glow-primary); 
        }
        50% { 
            text-shadow: 
                var(--glow-primary),
                0 0 30px rgba(255,107,26,0.4),
                0 0 60px rgba(255,107,26,0.2); 
        }
    }

    .hero-subtitle {
        font-size: clamp(1.1rem, 2.5vw, 1.4rem);
        color: var(--text-secondary);
        margin-bottom: var(--spacing-2xl);
        line-height: 1.7;
        max-width: 700px;
        margin-left: auto;
        margin-right: auto;
        animation: subtitleFadeIn 1.5s var(--ease-out) 0.3s both;
    }

    @keyframes subtitleFadeIn {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* ===== HERO METRICS PREMIUM ===== */
    .hero-metrics {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
        gap: var(--spacing-lg);
        margin: var(--spacing-2xl) 0;
    }

    .metric-card {
        position: relative;
        padding: var(--spacing-xl);
        text-align: center;
        background: var(--glass-medium);
        backdrop-filter: blur(16px) saturate(1.2);
        border: 1px solid var(--glass-border);
        border-radius: var(--radius-xl);
        transition: all var(--motion-medium) var(--ease-out);
        overflow: hidden;
        animation: metricSlideIn 1s var(--ease-out) both;
    }

    .metric-card:nth-child(1) { animation-delay: 0.5s; }
    .metric-card:nth-child(2) { animation-delay: 0.7s; }
    .metric-card:nth-child(3) { animation-delay: 0.9s; }

    @keyframes metricSlideIn {
        from {
            opacity: 0;
            transform: translateY(40px) scale(0.9);
        }
        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }

    .metric-card::before {
        content: '';
        position: absolute;
        inset: 0;
        background: linear-gradient(135deg, 
            rgba(255,107,26,0.1) 0%, 
            transparent 50%, 
            rgba(0,212,255,0.05) 100%);
        opacity: 0;
        transition: opacity var(--motion-medium) var(--ease-out);
        border-radius: var(--radius-xl);
    }

    .metric-card:hover {
        transform: translateY(-8px) scale(1.05);
        border-color: var(--border-accent);
        box-shadow: var(--shadow-xl), var(--glow-primary);
    }

    .metric-card:hover::before {
        opacity: 1;
    }

    .metric-number {
        display: block;
        font-size: 3rem;
        font-weight: 800;
        background: var(--gradient-primary);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        font-family: 'Orbitron', sans-serif;
        text-shadow: var(--glow-primary);
        margin-bottom: var(--spacing-sm);
        line-height: 1;
    }

    .metric-label {
        display: block;
        font-size: 0.9rem;
        color: var(--text-muted);
        text-transform: uppercase;
        letter-spacing: 0.1em;
        font-weight: 600;
    }

    .metric-glow {
        position: absolute;
        inset: 0;
        background: radial-gradient(circle, var(--primary), transparent);
        opacity: 0;
        transition: opacity var(--motion-medium) var(--ease-out);
        border-radius: var(--radius-xl);
    }

    .metric-card:hover .metric-glow {
        opacity: 0.15;
        animation: glowPulse 2s ease-in-out infinite;
    }

    /* ===== HERO ACTIONS PREMIUM ===== */
    .hero-actions {
        display: flex;
        gap: var(--spacing-xl);
        justify-content: center;
        flex-wrap: wrap;
        margin-top: var(--spacing-2xl);
        animation: actionsSlideUp 1.2s var(--ease-out) 1s both;
    }

    @keyframes actionsSlideUp {
        from {
            opacity: 0;
            transform: translateY(50px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .btn.primary-glow {
        position: relative;
        overflow: hidden;
        background: var(--gradient-primary);
        box-shadow: var(--shadow-lg), var(--glow-primary);
    }

    .btn.primary-glow::after {
        content: '';
        position: absolute;
        inset: 0;
        background: linear-gradient(45deg, 
            transparent 30%, 
            rgba(255,255,255,0.2) 50%, 
            transparent 70%);
        transform: translateX(-100%) skewX(-15deg);
        transition: transform var(--motion-slow) var(--ease-out);
    }

    .btn.primary-glow:hover::after {
        transform: translateX(200%) skewX(-15deg);
    }

    .btn-arrow {
        transition: transform var(--motion-medium) var(--ease-bounce);
        display: inline-block;
    }

    .btn:hover .btn-arrow {
        transform: translateY(6px);
        animation: arrowBounce 0.6s ease-in-out;
    }

    @keyframes arrowBounce {
        0%, 100% { transform: translateY(6px); }
        50% { transform: translateY(2px); }
    }

    /* ===== SECTIONS PREMIUM ===== */
    .filters-section {
        padding: var(--spacing-3xl) 0;
        margin: var(--spacing-2xl) 0;
        background: var(--glass-light);
        backdrop-filter: blur(16px) saturate(1.2);
        border-radius: var(--radius-2xl);
        border: 1px solid var(--glass-border);
        box-shadow: var(--shadow-lg);
    }

    .section-header {
        text-align: center;
        margin-bottom: var(--spacing-2xl);
    }

    .section-title {
        font-size: clamp(2rem, 5vw, 3.5rem);
        font-weight: 700;
        color: var(--text-primary);
        margin-bottom: var(--spacing-md);
        font-family: 'Orbitron', sans-serif;
        background: var(--gradient-primary);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        text-shadow: var(--glow-primary);
        letter-spacing: -0.02em;
    }

    .section-subtitle {
        font-size: 1.2rem;
        color: var(--text-secondary);
        max-width: 600px;
        margin: 0 auto;
        line-height: 1.6;
    }

    .catalogo-section {
        padding: var(--spacing-3xl) 0;
    }

    .catalogo-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
        gap: var(--spacing-2xl);
        padding: var(--spacing-xl) 0;
    }

    .card-wrapper {
        opacity: 0;
        transform: translateY(50px) scale(0.95);
        transition: all var(--motion-slow) var(--ease-out);
    }

    .card-wrapper.visible {
        opacity: 1;
        transform: translateY(0) scale(1);
    }

    @keyframes cardSlideIn {
        from {
            opacity: 0;
            transform: translateY(50px) scale(0.9);
        }
        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }

    /* ===== NO RESULTS PREMIUM ===== */
    .no-results {
        display: none;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: var(--spacing-3xl);
        text-align: center;
        background: var(--glass-medium);
        backdrop-filter: blur(16px) saturate(1.2);
        border: 1px solid var(--glass-border);
        border-radius: var(--radius-2xl);
        margin: var(--spacing-2xl) 0;
        box-shadow: var(--shadow-lg);
    }

    .no-results-icon {
        font-size: 5rem;
        margin-bottom: var(--spacing-xl);
        opacity: 0.6;
        animation: iconFloat 3s ease-in-out infinite;
    }

    @keyframes iconFloat {
        0%, 100% { transform: translateY(0); }
        50% { transform: translateY(-10px); }
    }

    .no-results h3 {
        color: var(--text-primary);
        margin-bottom: var(--spacing-md);
        font-family: 'Orbitron', sans-serif;
        font-size: 1.5rem;
    }

    .no-results p {
        color: var(--text-secondary);
        margin-bottom: var(--spacing-xl);
        max-width: 400px;
        line-height: 1.6;
    }

    /* ===== RESPONSIVE OPTIMIZATIONS ===== */
    @media (max-width: 768px) {
        .hero-automotive {
            min-height: auto; /* Altura autom√°tica para contenido */
            padding: var(--spacing-2xl) 0;
        }
        
        /* Desactivar animaciones de fondo complejas */
        .automotive-elements,
        .particle-system {
            display: none;
        }

        /* Desactivar animaciones de entrada */
        .animate-in {
            animation: none;
            opacity: 1;
            transform: none;
        }

        .hero-content {
            /* Reducir blur para mejorar rendimiento */
            backdrop-filter: blur(8px);
            -webkit-backdrop-filter: blur(8px);
        }
        
        .hero-title {
            font-size: clamp(2rem, 8vw + 1rem, 3rem);
        }

        .hero-metrics {
            flex-direction: column;
            gap: var(--spacing-md);
        }

        .metric-card {
            width: 100%;
        }
    }

    @media (max-width: 480px) {
        .hero-content {
            padding: var(--spacing-xl);
            margin: 0 var(--spacing-sm);
        }

        .metric-card {
            padding: var(--spacing-lg);
        }

        .metric-number {
            font-size: 2rem;
        }
    }

    /* ===== ACCESIBILIDAD Y PREFERENCIAS ===== */
    @media (prefers-reduced-motion: reduce) {
        .circuit,
        .particle-system,
        .metric-glow,
        .card-wrapper,
        .hero-title,
        .hero-subtitle,
        .metric-card,
        .hero-actions,
        .no-results-icon,
        .title-accent {
            animation: none;
            transition: none;
        }
        
        .card-wrapper {
            opacity: 1;
            transform: none;
        }

        .metric-card:hover {
            transform: translateY(-4px);
        }
    }

    /* ===== PERFORMANCE OPTIMIZATIONS ===== */
    .hero-background {
        will-change: transform;
        transform: translateZ(0);
    }

    .circuit {
        will-change: opacity, transform;
    }

    .particle-system {
        will-change: transform;
    }
</style>

<script>
// Counter Animation
function animateCounters() {
    const counters = document.querySelectorAll('[data-count]');
    
    counters.forEach(counter => {
        const target = parseInt(counter.getAttribute('data-count') || '0');
        const duration = 2000;
        const increment = target / (duration / 16);
        let current = 0;

        const updateCounter = () => {
            current += increment;
            if (current < target) {
                counter.textContent = Math.floor(current).toString();
                requestAnimationFrame(updateCounter);
            } else {
                counter.textContent = target.toString();
            }
        };

        updateCounter();
    });
}

// Initialize counters when visible
const counterObserver = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            animateCounters();
            counterObserver.unobserve(entry.target);
        }
    });
});

document.addEventListener('DOMContentLoaded', () => {
    const statsSection = document.querySelector('.hero-stats');
    if (statsSection) {
        counterObserver.observe(statsSection);
    }
});
</script>