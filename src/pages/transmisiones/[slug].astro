---
import Layout from '../../layouts/Layout.astro';
import { client } from '../../utils/sanityClient';
import { urlFor } from '../../utils/sanity';
import type { Transmision } from '../../types/sanity';

export async function getStaticPaths() {
  const query = `*[_type == "transmision" && defined(slug.current)]{"slug": slug.current}`;
  const slugs = await client.fetch(query);
  return slugs.map((item: {slug: string}) => ({
    params: { slug: item.slug }
  }));
}

const { slug } = Astro.params;
const productQuery = `*[_type == "transmision" && slug.current == $slug][0]`;
const transmision: Transmision = await client.fetch(productQuery, { slug });

if (!transmision) {
  return new Response(null, { status: 404, statusText: 'Not Found' });
}

const { marca, modelo, precio, condicion, foto, descripcion, sku, ano } = transmision;
---
<Layout 
  title={`${marca} ${modelo} - Transmisiones Automáticas SV`}
  description={descripcion || `Detalles de la transmisión automática ${marca} ${modelo}. Condición: ${condicion}. Disponible en nuestro taller en El Salvador.`}
>
  <main class="container">
    <div class="product-grid">
      <div class="product-image">
        {foto && <img src={urlFor(foto).width(800).url()} alt={`Foto de ${marca} ${modelo}`} />}
      </div>
      <div class="product-details">
        <h1 class="product-title">{marca} {modelo}</h1>
        <p class="product-price">${precio} <span class="currency">USD</span></p>
        <div class="tags">
          <span class="tag">{condicion}</span>
          {ano && <span class="tag">{ano}</span>}
          {sku && <span class="tag">SKU: {sku}</span>}
        </div>
        <div class="description">
          <h3>Descripción del Producto</h3>
          <p>{descripcion || 'No hay una descripción disponible para este producto.'}</p>
        </div>
        <a href="/contacto" class="btn">Solicitar Cotización</a>
      </div>
    </div>
  </main>
</Layout>

<style>
  .container { max-width: 1100px; margin: 4rem auto; padding: 1rem; }
  .product-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 3rem; align-items: start; }
  .product-image img { width: 100%; border-radius: 12px; border: 1px solid var(--color-borde); }
  .product-title { font-size: 2.5rem; margin-bottom: 1rem; }
  .product-price { font-size: 2.2rem; font-weight: bold; color: var(--color-acento); margin-bottom: 1.5rem; }
  .product-price .currency { font-size: 1.2rem; color: var(--color-texto-secundario); }
  .tags { display: flex; flex-wrap: wrap; gap: 0.5rem; margin-bottom: 2rem; }
  .tag { background-color: var(--color-superficie); border: 1px solid var(--color-borde); color: var(--color-texto-secundario); padding: 0.3rem 0.8rem; border-radius: 8px; font-size: 0.9rem; }
  .description h3 { font-size: 1.2rem; color: var(--color-texto-principal); border-bottom: 1px solid var(--color-borde); padding-bottom: 0.5rem; margin-bottom: 1rem; }
  .description p { line-height: 1.8; color: var(--color-texto-secundario); }
  .btn { margin-top: 2rem; }

  @media (max-width: 768px) {
    .product-grid { grid-template-columns: 1fr; }
  }
</style>